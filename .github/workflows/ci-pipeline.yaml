name: CI (Unit - IntegrationSmall - Docker build & push)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
          
      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coveralls

      - name: Run Tests
        working-directory: ./backend
        run: |
          pytest --cov-fail-under=80 -m "unit or integration_small"
  
      - name: Upload latest backend HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: latest-backend-html-coverage-report
          path: ./backend/coverage_reports/latest
  
      - name: Upload coverage to Coveralls
        working-directory: ./backend
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          coveralls

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run unit and integration-small tests with coverage
        working-directory: ./frontend
        run: npm run test:ci

      - name: Upload latest frontend HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: latest-frontend-html-coverage-report
          path: ./frontend/coverage_reports/latest

      - name: Upload frontend coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: ./frontend/coverage_reports/latest/lcov.info
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  docker-build-push:
    runs-on: ubuntu-latest
    needs: 
      - backend-test
      - frontend-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/daystride-backend:latest
          
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/daystride-frontend:latest
